Log message: [BEGIN] Registered signal handlers for <TERM>, <HUP>, <INT> [END]
Log template: [BEGIN] Registered signal handlers for <signal>, [END]</s>
Log template: [BEGIN] Changing view acls to: <username>, [END]
Where <username> is the value of the "yarn" or "curi" variable.</s>
Log message: [BEGIN] Changing modify acls to: <num>, <hex>, <hex> [END]
Where:
* `<num>` is a placeholder for the number "yarn"
* `<hex>` is a placeholder for the hexadecimal value "curi"</s>
Log message: [BEGIN] SecurityManager: authentication disabled; ui acls disabled; users with view permissions: <placeholders> users with modify permissions: <placeholders> [END]
Log template: [BEGIN] SecurityManager: authentication disabled; ui acls disabled; users with view permissions: <num_users>, users with modify permissions: <num_users> [END]
In this case, the log message contains the following placeholders:
* `yarn`: a user with view permissions
* `curi`: a user with modify permissions
So, the log template would be:
Log message: [BEGIN] SecurityManager: authentication disabled; ui acls disabled; users with view permissions: 2 users with modify permissions: 2 [END]</s>
Log template: [BEGIN] Changing view acls to: <username>, [END]
Where <username> is the value of the "yarn" or "curi" variable.</s>
Log message: [BEGIN] Changing modify acls to: <num>, <hex>, <hex> [END]
Where:
* `<num>` is a placeholder for the number "yarn"
* `<hex>` is a placeholder for the hexadecimal value "curi"</s>
Log message: [BEGIN] SecurityManager: authentication disabled; ui acls disabled; users with view permissions: <placeholders> users with modify permissions: <placeholders> [END]
Log template: [BEGIN] SecurityManager: authentication disabled; ui acls disabled; users with view permissions: <num_users>, users with modify permissions: <num_users> [END]
In this case, the log message contains the following placeholders:
* `yarn`: a user with view permissions
* `curi`: a user with modify permissions
So, the log template would be:
Log message: [BEGIN] SecurityManager: authentication disabled; ui acls disabled; users with view permissions: 2 users with modify permissions: 2 [END]</s>
Log message: [BEGIN] Slf4jLogger started [END]
Log template: [BEGIN] Slf4jLogger started [END]</s>
Log template: [BEGIN] Starting <remoting> [END]</s>
Log message: [BEGIN] Remoting started; listening on addresses :<akka.tcp://sparkExecutorActorSystem@mesos-slave-07:55904> [END]
Log template: [BEGIN] Remoting started; listening on addresses <akka.tcp://<actor_system_name>@<mesos_slave_address> [END]</s>
Log message: [BEGIN] Successfully started service '<sparkExecutorActorSystem>', on port <55904> [END]</s>
Log template: [BEGIN] Created local directory at <path>, [END]
Log message: [BEGIN] Created local directory at /opt/hdfs/nodemanager/usercache/curi/appcache/application_1485248649253_0147/blockmgr-70293f72-844a-4b39-9ad6-fb0ad7e364e4 [END]
Result: [BEGIN] Created local directory at /opt/hdfs/nodemanager/usercache/curi/appcache/application_1485248649253_0147/blockmgr-70293f72-844a-4b39-9ad6-fb0ad7e364e4 [END]</s>
Log template: [BEGIN] MemoryStore started with capacity <num> GB [END]
Log message: [BEGIN] MemoryStore started with capacity 17.7 GB [END]</s>
Log message: [BEGIN] Connecting to driver: spark://CoarseGrainedScheduler@10.10.34.11:48069 [END]
Log template: [BEGIN] Connecting to driver: spark://<driver_host>:<driver_port> [END]</s>
Log message: [BEGIN] Successfully registered with driver <driver_name> [END]
Log template: [BEGIN] Successfully registered with driver <driver_name> [END]</s>
Log message: [BEGIN] Starting executor ID 5 on host <host>, [END]
Log template: [BEGIN] Starting executor ID <num> on host <host>, [END]</s>
Log message: [BEGIN] Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port <num>. [END]
Where `<num>` is the port number where the service was started.</s>
Log message: [BEGIN] Server created on <num>, [END]
Log template: [BEGIN] Server created on <num>, [END]</s>
Log message: [BEGIN] Trying to register BlockManager <num> [END]</s>
Log template: [BEGIN] Registered BlockManager <num> [END]
Where <num> is a placeholder for the dynamic number or parameter "Registered BlockManager".</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <num> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Running task <num>.0 in stage <num>.0 (TID <num>) [END]
Where:
* <num> is a variable representing the task number
* <hex> is a variable representing the hexadecimal address of the task in memory</s>
Log message: [BEGIN] Running task 1.0 in stage 0.0 (TID 1) [END]
Log template: [BEGIN] Running task <version>, in stage <stage>, (TID <tid>) [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 0.0)
* <tid> is a variable representing the task ID (e.g. 3)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 4.0)
* <stage> is a placeholder for the stage number (e.g. 0.0)
* <tid> is a placeholder for the task ID (e.g. 4)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_9_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "9"
* `<time>` is a placeholder for the dynamic value "160 ms"</s>
Log message: [BEGIN] Block broadcast_9 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_2_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_2_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_2_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_2_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_2_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:21876+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:14584+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:0+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:7292+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:29168+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Started reading broadcast variable <num>, at 0x<hex>, mask 0x<hex> [END]</s>
Log message: [BEGIN] Block broadcast_8_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "8"
* `<time>` is a placeholder for the dynamic value "19 ms"</s>
Log message: [BEGIN] Block broadcast_8 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log template: [BEGIN] mapreduce.task.id is <num>, [END]</s>
Log template: [BEGIN] mapreduce.task.attempt.id is <num>, [END]</s>
Log message: [BEGIN] mapreduce.task.ismap is deprecated. Instead, use mapred.task.ismap [END]</s>
Log template: [BEGIN] mapreduce.job.id is <num>, [END]</s>
Log message: [BEGIN] mapreduce.task.partition is deprecated. Instead, use <num>, at <hex>, mask <hex> [END]</s>
Log message: [BEGIN] Started reading broadcast variable <num>, at 0x<hex>, mask 0x<hex> [END]</s>
Log message: [BEGIN] Block broadcast_0_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 21 ms [END]
Where <num> is a placeholder for the dynamic value "0".</s>
Log message: [BEGIN] Block broadcast_0 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_4_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 18 ms [END]
Where <num> is a placeholder for the dynamic value "4".</s>
Log message: [BEGIN] Block broadcast_4 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_3_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 17 ms [END]
Where <num> is a placeholder for the dynamic value "3".</s>
Log message: [BEGIN] Block broadcast_3 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Started reading broadcast variable 1 [END]
Log template: [BEGIN] Started reading broadcast variable <num> [END]</s>
Log message: [BEGIN] Block broadcast_1_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable 1 took 16 ms [END]
Log template: [BEGIN] Reading variable <num> took <time> ms [END]</s>
Log message: [BEGIN] Block broadcast_1 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_2_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 16 ms [END]
Where <num> is a placeholder for the dynamic value "2".</s>
Log message: [BEGIN] Block broadcast_2 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template contains four placeholders:
* "<num>"

So, the extracted template would be:

Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template contains four placeholders:
* "<num>"

So, the extracted template would be:

Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Block rdd_2_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_2_3 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_2_1 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_2_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where <num> is the estimated size of the block in bytes.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 12, init = 30, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 12, init = 30, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 15, init = 26, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 15, init = 26, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 15, init = 26, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 3.0 in stage 0.0 (TID <num>). 2703 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 0.0 (TID <num>). 2703 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 0.0 (TID <num>). 2703 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 0.0 (TID <num>). 2703 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes) [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a placeholder for the actual task number
* <stage> is a placeholder for the actual stage name
* <tid> is a placeholder for the actual task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Task 1.0 in stage 1.0 (TID 56) [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 1.0)
* <tid> is a placeholder for the task ID (e.g. 69)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 1.0)
* <tid> is a placeholder for the task ID (e.g. 78)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 4.0)
* <stage> is a placeholder for the stage number (e.g. 1.0)
* <tid> is a placeholder for the task ID (e.g. 79)</s>
Log message: [BEGIN] Block broadcast_10_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "10"
* `<time>` is a placeholder for the dynamic value "17 ms"</s>
Log message: [BEGIN] Block broadcast_10 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = -<num>, init = <num>, finish = <num> [END]
Where:
* <num> is a variable representing the actual value of each counter (e.g. 41, -4122, 4162, 1)
So the output for the given log message would be:
Log template: [BEGIN] Times: total = <num>, boot = -<num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 1.0 (TID <num>). 2685 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 1.0 (TID 56). <num> bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage> in TID <tid>, <num> bytes sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2474 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 1.0 (TID <num>). 2651 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 1.0 (TID <num>). 2523 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Task 1.0 in stage 2.0 (TID 101) [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 2.0)
* <tid> is a placeholder for the task ID (e.g. 112)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 2.0)
* <tid> is a placeholder for the task ID (e.g. 118)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 2.0)
* <tid> is a variable representing the task ID (e.g. 119)</s>
Log message: [BEGIN] Block broadcast_11_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 15 ms [END]
Where <num> is a placeholder for the dynamic value "11".</s>
Log message: [BEGIN] Block broadcast_11 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 2.0 (TID <num>, 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>, sent <num> bytes to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 2.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 2.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 2.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.<TID>, sent <num> bytes to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number (e.g. 0.0)
* <stage> is a variable representing the stage number (e.g. 2.0)
* <tid> is a variable representing the task ID (e.g. 87)
* <result> is a variable representing the number of bytes sent to the driver (e.g. 2087)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 3.0 (TID 136) [END]
Log template: [BEGIN] Running task <version> in stage <stage>, TID <tid> [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 3.0)
* <tid> is a variable representing the task ID (e.g. 150)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 3.0)
* <tid> is a variable representing the task ID (e.g. 158)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 3.0)
* <tid> is a variable representing the task ID (e.g. 159)</s>
Log message: [BEGIN] Block broadcast_12_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 30 ms [END]
Where <num> is a placeholder for the dynamic value "12".</s>
Log message: [BEGIN] Block broadcast_12 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_6_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_6_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_6_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_6_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_6_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_6_4 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_6_3 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_6_1 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_6_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_6_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 3.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 3.0 (TID 158). <num> bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 1.0 in stage 3.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 3.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Task 1.0 in stage 4.0 (TID 185) [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 4.0)
* <tid> is a variable representing the task ID (e.g. 195)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 4.0)
* <tid> is a variable representing the task ID (e.g. 198)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 4.0)
* <tid> is a variable representing the task ID (e.g. 199)</s>
Log message: [BEGIN] Block broadcast_13_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 13)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 41 ms)</s>
Log message: [BEGIN] Block broadcast_13 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_6_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2099 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 4.0 (TID <num>, 2099 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 4.0 (TID <num>). 2138 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 4.0 (TID <num>). 2099 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 4.0 (TID <num>). 2138 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a placeholder for the actual task number (e.g. 0.0)
* <stage> is a placeholder for the actual stage number (e.g. 5.0)
* <tid> is a placeholder for the actual task ID (e.g. 206)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 5.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 5.0)
* <tid> is a placeholder for the task ID (e.g. 231)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 5.0)
* <tid> is a variable representing the task ID (e.g. 238)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 5.0)
* <tid> is a variable representing the task ID (e.g. 239)</s>
Log message: [BEGIN] Block broadcast_14_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable 14 took 12 ms [END]
Log template: [BEGIN] Reading variable <num> took <time> ms [END]</s>
Log message: [BEGIN] Block broadcast_14 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2198 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 5.0 (TID <num>). 2198 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 5.0 (TID <num>). 2198 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 5.0 (TID <num>). 2198 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 5.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a placeholder for the actual task number
* <stage> is a placeholder for the actual stage number
* <tid> is a placeholder for the actual task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 6.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 6.0)
* <tid> is a placeholder for the task ID (e.g. 273)</s>
Log message: [BEGIN] Started reading broadcast variable <num>, at 0x<hex>, mask 0x<hex> [END]
Where:
* `<num>` is the value of the variable being read (in this case, 15)
* `<hex>` is the hexadecimal address of the variable (in this case, 0x15)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 6.0)
* <tid> is a placeholder for the task ID (e.g. 278)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 6.0)
* <tid> is a variable representing the task ID (e.g. 279)</s>
Log message: [BEGIN] Block broadcast_15_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took <num> ms [END]
Where <num> is a placeholder for the dynamic value "15".</s>
Log message: [BEGIN] Block broadcast_15 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 6.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 6.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 6.0 (TID <num>, 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>, sent <num> bytes to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 6.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 7.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 7.0)
* <tid> is a variable representing the task ID (e.g. 312)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 7.0)
* <tid> is a variable representing the task ID (e.g. 318)</s>
Log message: [BEGIN] Started reading broadcast variable <num>, at 0x<hex>, mask 0x<hex> [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 7.0)
* <tid> is a variable representing the task ID (e.g. 319)</s>
Log message: [BEGIN] Block broadcast_16_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable 16 took 13 ms [END]
Log template: [BEGIN] Reading variable <num> took <time> ms [END]</s>
Log message: [BEGIN] Block broadcast_16 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_11_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_11_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_11_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_11_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_11_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_11_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.</s>
Log message: [BEGIN] Block rdd_11_4 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_11_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where <num> is the estimated size of the block in bytes.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 28, init = 13, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 28, init = 13, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 28, init = 13, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 19, init = 21, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 19, init = 21, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 3.0 in stage 7.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 7.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 7.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 7.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a placeholder for the actual task number
* <stage> is a placeholder for the actual stage number
* <tid> is a placeholder for the actual task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 8.0 (TID 335) [END]
Log template: [BEGIN] Running task <version> in stage <stage>, TID <tid> [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 8.0)
* <tid> is a variable representing the task ID (e.g. 349)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 8.0)
* <tid> is a variable representing the task ID (e.g. 358)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 8.0)
* <tid> is a variable representing the task ID (e.g. 359)</s>
Log message: [BEGIN] Block broadcast_17_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 12 ms [END]
Where <num> is a placeholder for the dynamic value "17".</s>
Log message: [BEGIN] Block broadcast_17 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_11_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2141 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 8.0 (TID <num>). 2141 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 8.0 (TID <num>, 2141 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>, sent <num> bytes to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 8.0 (TID <num>). 2141 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 8.0 (TID <num>). 2111 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 1.0)
* <stage> is a placeholder for the stage number (e.g. 9.0)
* <tid> is a placeholder for the task ID (e.g. 374)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 9.0)
* <tid> is a placeholder for the task ID (e.g. 388)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 9.0)
* <tid> is a variable representing the task ID (e.g. 398)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 9.0)
* <tid> is a variable representing the task ID (e.g. 399)</s>
Log message: [BEGIN] Block broadcast_18_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 12 ms [END]
Where <num> is a placeholder for the dynamic value "18".</s>
Log message: [BEGIN] Block broadcast_18 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2239 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 9.0 (TID <num>). 2239 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 9.0 (TID <num>). 2239 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 9.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 9.0 (TID <num>). 2239 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Task 1.0 in stage 10.0 (TID 416) [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 10.0)
* <tid> is a variable representing the task ID (e.g. 430)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 10.0)
* <tid> is a variable representing the task ID (e.g. 438)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 10.0)
* <tid> is a variable representing the task ID (e.g. 439)</s>
Log message: [BEGIN] Block broadcast_19_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 19)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 12 ms)</s>
Log message: [BEGIN] Block broadcast_19 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.</s>
Log message: [BEGIN] Finished task 3.0 in stage 10.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 10.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 10.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 10.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 11.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 11.0)
* <tid> is a placeholder for the task ID (e.g. 475)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 11.0)
* <tid> is a variable representing the task ID (e.g. 478)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 11.0)
* <tid> is a variable representing the task ID (e.g. 479)</s>
Log message: [BEGIN] Block broadcast_20_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "20"
* `<time>` is a placeholder for the dynamic value "15 ms"</s>
Log message: [BEGIN] Block broadcast_20 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_16_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_16_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_16_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_16_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_16_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.
So, in this case, the log template would be:
[BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.
So, in this case, the log template would be:
[BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.
So, in this case, the log template would be:
[BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_16_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where <num> is the estimated size of the block in bytes.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 20, init = 21, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 20, init = 21, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 20, init = 21, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 20, init = 20, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 20, init = 20, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 11.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 26, init = 14, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 26, init = 14, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 26, init = 14, finish = 0 [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 3.0 in stage 11.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 11.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 11.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 12.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 12.0)
* <tid> is a variable representing the task ID (e.g. 508)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 12.0)
* <tid> is a variable representing the task ID (e.g. 518)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 12.0)
* <tid> is a variable representing the task ID (e.g. 519)</s>
Log message: [BEGIN] Block broadcast_21_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "21"
* `<time>` is a placeholder for the dynamic value "11 ms"</s>
Log message: [BEGIN] Block broadcast_21 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_16_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 3.0 in stage 12.0 (TID <num>). 2155 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 12.0 (TID <num>). 2155 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 12.0 (TID <num>). 2105 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 12.0 (TID <num>). 2155 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 13.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 13.0)
* <tid> is a variable representing the task ID (e.g. 553)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 13.0)
* <tid> is a variable representing the task ID (e.g. 558)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 13.0)
* <tid> is a variable representing the task ID (e.g. 559)</s>
Log message: [BEGIN] Block broadcast_22_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 22)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 11 ms)</s>
Log message: [BEGIN] Block broadcast_22 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 4.0 in stage 13.0 (TID <num>). 2241 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 13.0 (TID <num>). 2241 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 13.0 (TID <num>). 2241 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 13.0 (TID <num>). 2257 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 14.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 14.0)
* <TID> is a variable representing the task ID (e.g. 590)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 14.0)
* <tid> is a variable representing the task ID (e.g. 598)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 14.0)
* <tid> is a variable representing the task ID (e.g. 599)</s>
Log message: [BEGIN] Block broadcast_23_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 23)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 11 ms)</s>
Log message: [BEGIN] Block broadcast_23 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 3.0 in stage 14.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 14.0 (TID <num>, 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 4.0 in stage 14.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 14.0 (TID <num>, 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 15.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 15.0)
* <tid> is a placeholder for the task ID (e.g. 636)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 15.0)
* <tid> is a variable representing the task ID (e.g. 638)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 15.0)
* <tid> is a variable representing the task ID (e.g. 639)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_24_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 10 ms [END]
Where <num> is a placeholder for the dynamic value "24".</s>
Log message: [BEGIN] Block broadcast_24 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_21_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_21_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_21_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_21_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_21_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.</s>
Log message: [BEGIN] Block rdd_21_4 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.</s>
Log message: [BEGIN] Block rdd_21_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template has four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So, the output of the log parser would be:
Log template: [BEGIN] Times: total = 39, boot = 20, init = 19, finish = 0 [END]
In this case, the values of the variables are:
* "total" = 39
* "boot" = 20
* "init" = 19
* "finish" = 0

Note that the values of the variables are the same as the values of the tokens in the log message, but they are enclosed in placeholders in the log template.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 17, init = 23, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 17, init = 23, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 15.0 (TID <num>, 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 18, init = 24, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 18, init = 24, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 15.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 15.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 15.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a placeholder for the actual task number
* <stage> is a placeholder for the actual stage number
* <tid> is a placeholder for the actual task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 1.0)
* <stage> is a placeholder for the stage number (e.g. 16.0)
* <tid> is a placeholder for the task ID (e.g. 657)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 16.0)
* <TID> is a placeholder for the task ID (e.g. 671)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 16.0)
* <tid> is a placeholder for the task ID (e.g. 678)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 16.0)
* <tid> is a variable representing the task ID (e.g. 679)</s>
Log message: [BEGIN] Block broadcast_25_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "25"
* `<time>` is a placeholder for the dynamic value "11 ms"</s>
Log message: [BEGIN] Block broadcast_25 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_21_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 2.0 in stage 16.0 (TID <num>, 2163 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 16.0 (TID <num>). 2151 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 16.0 (TID <num>). 2163 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2151 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 16.0 (TID <num>). 2163 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 17.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 17.0)
* <tid> is a placeholder for the task ID (e.g. 716)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 17.0)
* <tid> is a variable representing the task ID (e.g. 718)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 17.0)
* <tid> is a variable representing the task ID (e.g. 719)</s>
Log message: [BEGIN] Block broadcast_26_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 10 ms [END]
Where <num> is a placeholder for the dynamic value "26".</s>
Log message: [BEGIN] Block broadcast_26 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 17.0 (TID <num>). 2156 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 2.0 in stage 17.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 17.0 (TID <num>). 2156 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 17.0 (TID <num>). 2156 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <TID> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 18.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 18.0)
* <tid> is a variable representing the task ID (e.g. 750)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 18.0)
* <tid> is a variable representing the task ID (e.g. 758)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 18.0)
* <tid> is a variable representing the task ID (e.g. 759)</s>
Log message: [BEGIN] Block broadcast_27_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 10 ms [END]
Where <num> is a placeholder for the dynamic value "27".</s>
Log message: [BEGIN] Block broadcast_27 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 18.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 3.0 in stage 18.0 (TID <num>). 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 18.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 2.0 in stage 18.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage 19.0 (TID 776) [END]
Log template: [BEGIN] Running task <version> in stage <stage>, TID <tid> [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 19.0)
* <tid> is a placeholder for the task ID (e.g. 789)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 19.0)
* <tid> is a placeholder for the task ID (e.g. 798)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 19.0)
* <tid> is a variable representing the task ID (e.g. 799)</s>
Log message: [BEGIN] Block broadcast_28_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "28"
* `<time>` is a placeholder for the dynamic value "9 ms"</s>
Log message: [BEGIN] Block broadcast_28 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_26_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_26_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_26_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_26_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_26_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_26_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_26_3 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_26_4 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_26_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_26_1 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 20, init = 20, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 20, init = 20, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 23, init = 18, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 23, init = 18, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 23, init = 18, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 19.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 19.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 1.0 in stage 19.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 19.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 0.0)
* <stage> is a variable representing the stage number (e.g. 20.0)
* <TID> is a variable representing the task ID (e.g. 807)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 1.0)
* <stage> is a placeholder for the stage number (e.g. 20.0)
* <tid> is a placeholder for the task ID (e.g. 821)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 20.0)
* <tid> is a variable representing the task ID (e.g. 833)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 20.0)
* <tid> is a variable representing the task ID (e.g. 838)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 20.0)
* <tid> is a variable representing the task ID (e.g. 839)</s>
Log message: [BEGIN] Block broadcast_29_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "29"
* `<time>` is a placeholder for the dynamic value "11 ms"</s>
Log message: [BEGIN] Block broadcast_29 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_26_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 20.0 (TID <num>). 2076 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 20.0 (TID <num>). 2076 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.(TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a placeholder for the task number (e.g. 0.0)
* <stage> is a placeholder for the stage number (e.g. 20.0)
* <tid> is a placeholder for the thread ID (e.g. 807)
* <result> is a placeholder for the result sent to the driver (e.g. 2076 bytes)</s>
Log message: [BEGIN] Finished task 1.0 in stage 20.0 (TID <num>, 2076 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 20.0 (TID <num>). 2076 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 0.0)
* <stage> is a variable representing the stage number (e.g. 21.0)
* <TID> is a variable representing the task ID (e.g. 853)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task 1.0 in stage <num>, TID <tid> [END]
Where:
* <num> is a variable representing the stage number (e.g. 21.0)
* <tid> is a variable representing the task ID (e.g. 867)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 21.0)
* <TID> is a variable representing the task ID (e.g. 877)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 21.0)
* <tid> is a variable representing the task ID (e.g. 878)</s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 21.0)
* <tid> is a variable representing the task ID (e.g. 879)</s>
Log message: [BEGIN] Block broadcast_30_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "30"
* `<time>` is a placeholder for the dynamic value "8 ms"</s>
Log message: [BEGIN] Block broadcast_30 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 1.0 in stage 21.0 (TID <num>). 2333 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 21.0 (TID <num>). 2333 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 21.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 21.0 (TID <num>). 2333 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <TID> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 22.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 22.0)
* <TID> is a variable representing the task ID (e.g. 912)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 22.0)
* <tid> is a variable representing the task ID (e.g. 918)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 22.0)
* <tid> is a variable representing the task ID (e.g. 919)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_31_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 31)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 8 ms)</s>
Log message: [BEGIN] Block broadcast_31 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_30_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_30_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_30_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_30_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Partition rdd_30_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Found block rdd_2_0 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_4 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_3 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_2 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_2_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_30_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_30_1 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_30_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_30_4 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_30_3 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 19, init = 21, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 19, init = 21, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template has four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So, the output of the log parser would be:
Log template: [BEGIN] Times: total = 39, boot = 20, init = 19, finish = 0 [END]
In this case, the values of the variables are:
* "total" = 39
* "boot" = 20
* "init" = 19
* "finish" = 0

Note that the values of the variables are the same as the values of the tokens in the log message, but they are enclosed in placeholders in the log template.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template has four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So, the output of the log parser would be:
Log template: [BEGIN] Times: total = 39, boot = 21, init = 18, finish = 0 [END]
In this case, the values of the variables are:
* "total" = 39
* "boot" = 21
* "init" = 18
* "finish" = 0

Note that the values of the variables are the same as the values of the tokens in the log message, but they are enclosed in placeholders in the log template.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 18, init = 23, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 18, init = 23, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 18, init = 23, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 18, init = 22, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 18, init = 22, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 22.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 22.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 22.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 22.0 (TID <num>). 2667 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 1.0)
* <stage> is a placeholder for the stage number (e.g. 23.0)
* <tid> is a placeholder for the task ID (e.g. 940)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 23.0)
* <TID> is a variable representing the task ID (e.g. 951)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 23.0)
* <tid> is a variable representing the task ID (e.g. 958)</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 23.0)
* <tid> is a variable representing the task ID (e.g. 959)</s>
Log message: [BEGIN] Block broadcast_32_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 16 ms [END]
Where <num> is a placeholder for the dynamic value "32".</s>
Log message: [BEGIN] Block broadcast_32 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <size> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_30_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 2.0 in stage 23.0 (TID <num>). 2223 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 23.0 (TID <num>). 2223 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 23.0 (TID <num>). 2223 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 23.0 (TID <num>). 2223 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.<stage>. (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage 24.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num> [END]
Log template: [BEGIN] Got assigned task <num> [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <TID> is a variable representing the task ID (e.g. 998)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <tid> is a variable representing the task ID (e.g. 1012)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <tid> is a variable representing the task ID (e.g. 1026)</s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_33_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 33)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 9 ms)</s>
Log message: [BEGIN] Block broadcast_33 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_6_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_6_1 locally [END]
Log template: [BEGIN] Found block <name> locally [END]</s>
Log message: [BEGIN] Found block rdd_6_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000004)

So the log template would be:
[BEGIN] attempt_<year>_<month>_<hour>: Committed [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000002)
* <hex> is a variable (e.g. 998)</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000003)

So the log template would be:
[BEGIN] attempt_<year>_<month>_<hour>: Committed [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000001)
* <hex> is a variable (e.g. 984)</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 000000)

So the log template would be:
[BEGIN] attempt_<year>_<month>_<hour>: Committed [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 24.0 (TID <num>, 2364 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 24.0 (TID <num>, 2364 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 24.0 (TID <num>). 2364 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 24.0 (TID <num>). 2364 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>). <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (40.0 in this case)
* <stage> is a variable representing the stage number (24.0 in this case)
* <tid> is a variable representing the task ID (1125 in this case)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (41.0 in this case)
* <stage> is a variable representing the stage number (24.0 in this case)
* <tid> is a variable representing the task ID (1126 in this case)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 42.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <tid> is a variable representing the task ID (e.g. 1127)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_11_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_11_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = -<num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = -<num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. June)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 1129)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. June)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 1128)</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. June)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 1125)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format `YYYYMMDD` (e.g. `20170609` for June 9, 2017)
* `<time>` is a time in the format `HHMMSS` (e.g. `0024` for 10:24 AM)
* `<pid>` is a process ID (e.g. `1127`)
* `<tid>` is a thread ID (e.g. `42`)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. June)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 1126)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 43)
* <stage> is a variable representing the stage number (e.g. 24)
* <TID> is a variable representing the task ID (e.g. 1128)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 40.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <TID> is a variable representing the task ID (e.g. 1125)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 42.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <TID> is a variable representing the task ID (e.g. 1127)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task ID (e.g. 41.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <TID> is a variable representing the task ID (e.g. 1126)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (in this case, 80)
* <stage> is a variable representing the stage number (in this case, 24)
* <tid> is a variable representing the thread ID (in this case, 1135)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (in this case, 84)
* <stage> is a variable representing the stage number (in this case, 24)
* <tid> is a variable representing the thread ID (in this case, 1141)</s>
Log message: [BEGIN] Found block rdd_16_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_16_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format `YYYYMMDD` (e.g. `20170609` for June 9, 2017)
* `<time>` is a time in the format `HHMMSS` (e.g. `0018` for 6:18 PM)
* `<pid>` is a process ID (e.g. `000083` for process 83)
* `<tid>` is a thread ID (e.g. `1138` for thread 1138)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format "YYYYMMDD" (e.g. "20170609")
* `<time>` is a time in the format "HHMMSS" (e.g. "0018")
* `<pid>` is a process ID (e.g. "000084")
* `<tid>` is a thread ID (e.g. "1141")</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format `YYYYMMDD` (e.g. `20170609` for June 9, 2017)
* `<time>` is a time in the format `HHMMSS` (e.g. `0018` for 6:18 PM)
* `<pid>` is a process ID (e.g. `000080` for process 80)
* `<tid>` is a thread ID (e.g. `1135` for thread 1135)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format `YYYYMMDD` (e.g. `20170609` for June 9, 2017)
* `<time>` is a time in the format `HHMMSS` (e.g. `0018` for 6:18 PM)
* `<pid>` is a process ID (e.g. `000082` for process 82)
* `<tid>` is a thread ID (e.g. `1137` for thread 1137)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format `YYYYMMDD` (e.g. `20170609` for June 9, 2017)
* `<time>` is a time in the format `HHMMSS` (e.g. `0018` for 6:18 PM)
* `<pid>` is a process ID (e.g. `000081` for process 81)
* `<tid>` is a thread ID (e.g. `1136` for thread 1136)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID>, sent <num> bytes to driver [END]
Where:
* <num> is a variable representing the task number (in this case, 84)
* <stage> is a variable representing the stage number (in this case, 24)
* <TID> is a variable representing the task ID (in this case, 1141)
* <hex> is a variable representing the hexadecimal value of the result sent to the driver (in this case, 2364)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 80)
* <stage> is a variable representing the stage number (e.g. 24)
* <TID> is a variable representing the task ID (e.g. 1135)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (in this case, 120)
* <stage> is a variable representing the stage number (in this case, 24)
* <tid> is a variable representing the task ID (in this case, 1145)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 121)
* <stage> is a variable representing the stage number (e.g. 24)
* <tid> is a variable representing the task ID (e.g. 1146)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 122)
* <stage> is a variable representing the stage number (e.g. 24)
* <tid> is a variable representing the task ID (e.g. 1147)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 123)
* <stage> is a variable representing the stage number (e.g. 24)
* <tid> is a variable representing the task ID (e.g. 1150)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_21_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_21_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000124)
* <hex> is a variable (e.g. 1151)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task ID (e.g. 124)
* <stage> is a variable representing the stage number (e.g. 24)
* <TID> is a variable representing the task ID (e.g. 1151)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<day>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a constant (e.g. June)
* <day> is a constant (e.g. 09)
* <hour> is a constant (e.g. 14)
So the log template would be:
[BEGIN] attempt_<year>_<month>_<day>_<hour>: Committed [END]</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000122)
* <hex> is a variable (e.g. 1147)</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000121)
* <hex> is a variable (e.g. 1146)</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000123)
* <hex> is a variable (e.g. 1150)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 120)
* <stage> is a variable representing the stage number (e.g. 24)
* <TID> is a variable representing the task ID (e.g. 1145)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Finished task <num>.0 in <stage>.0 (TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task ID (e.g. 121.0)
* <stage> is a variable representing the stage number (e.g. 24.0)
* <tid> is a variable representing the thread ID (e.g. 1146)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 122)
* <stage> is a variable representing the stage number (e.g. 24)
* <TID> is a variable representing the task ID (e.g. 1147)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a placeholder for the task ID (e.g. 123)
* <stage> is a placeholder for the stage number (e.g. 24)
* <TID> is a placeholder for the task ID (e.g. 1150)
* <hex> is a placeholder for the hexadecimal value of the result sent to the driver (e.g. 2364)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_26_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_26_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000160)

So the log template would be:
[BEGIN] attempt_<year>_<month>_<hour>: Committed [END]</s>
Log message: [BEGIN] Finished task 160.0 in stage 24.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log template: [BEGIN] attempt_<date>, Committed [END]
Where <date> is a variable representing the date in the log message.</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. June)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 0x1159)</s>
Log message: [BEGIN] Finished task 163.0 in stage 24.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 164.0 in stage 24.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. June)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 0024)
* <hex> is a variable (e.g. 1157)</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log template: [BEGIN] attempt_<date>, Committed [END]
Where <date> is a variable representing the date in the log message.</s>
Log message: [BEGIN] Finished task 162.0 in stage 24.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 161.0 in stage 24.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <TID> is a variable representing the task ID.</s>
Log message: [BEGIN] Running task 1.0 in stage 25.0 (TID <num>) [END]
Where <num> is a variable that represents the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 25.0)
* <tid> is a placeholder for the task ID (e.g. 1194)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 25.0)
* <tid> is a variable representing the task ID (e.g. 1198)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 25.0)
* <tid> is a variable representing the task ID (e.g. 1199)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_34_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the value of the variable being read (in this case, 34)
* `<time>` is a placeholder for the time taken to read the variable (in this case, 9 ms)</s>
Log message: [BEGIN] Block broadcast_34 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_30_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_30_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] File Output Committer Algorithm version is <num> [END]
Where <num> is a placeholder for the dynamic value "1".</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]
Log template: [BEGIN] Saved output of task '<task_name>', to hdfs://<host>:<port>/<path>/<filename> [END]</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000004)
* <hex> is a variable (e.g. 1199)</s>
Log message: [BEGIN] Finished task 4.0 in stage 25.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000003)
* <hex> is a variable (e.g. 1198)</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<date>_<time>_<pid>_<tid>: Committed [END]
Where:
* `<date>` is a date in the format `YYYYMMDD` (e.g. `20170609` for June 9, 2017)
* `<time>` is a time in the format `HHMMSS` (e.g. `0018` for 6:18 PM)
* `<pid>` is a process ID (e.g. `1166`)
* `<tid>` is a thread ID (e.g. `000000`)</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log template: [BEGIN] Saved output of task '<task_name>', to '<file_path>' [END]
Where:
* `<task_name>` is a variable that represents the name of the task.
* `<file_path>` is a variable that represents the path to the file where the output of the task was saved.</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000002)
* <hex> is a variable (e.g. 1194)</s>
Log message: [BEGIN] attempt_<year>_<month>_<hour>: Committed [END]
Where:
* <year> is a constant (e.g. 2017)
* <month> is a variable (e.g. 06)
* <hour> is a variable (e.g. 09)
* <num> is a variable (e.g. 000001)
* <hex> is a variable (e.g. 1180)</s>
Log message: [BEGIN] Finished task 3.0 in stage 25.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 2.0 in stage 25.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 25.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Running task 1.0 in stage <num>, TID <tid> [END]
Where:
* <num> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1201)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <TID> is a variable representing the task ID (e.g. 1202)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 26.0)
* <tid> is a placeholder for the task ID (e.g. 1203)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1204)</s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_37_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 14 ms [END]
Where <num> is a placeholder for the dynamic value "37".</s>
Log message: [BEGIN] Block broadcast_37 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Partition rdd_42_0 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:0+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Partition rdd_42_4 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:29168+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_3 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:21876+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_2 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:14584+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_1 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:7292+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Block broadcast_36_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 11 ms [END]
Where <num> is a placeholder for the dynamic value "36".</s>
Log message: [BEGIN] Block broadcast_36 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the variables are:
* total: 60
* boot: -8772
* init: 8827
* finish: 5
So the resulting log template would be:
[BEGIN] Times: total = 60, boot = -8772, init = 8827, finish = 5 [END]</s>
Log message: [BEGIN] Block rdd_42_4 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_2 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_1 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_3 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 5.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1205)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 21, init = 20, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 21, init = 20, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 21, init = 20, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 20, init = 20, finish = 1 [END]
Log template: [BEGIN] Times: total = 41, boot = 20, init = 20, finish = 1 [END]</s>
Log message: [BEGIN] Partition rdd_42_5 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:36460+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 23, init = 19, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 23, init = 19, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 20, init = 21, finish = 1 [END]
Log template: [BEGIN] Times: total = 42, boot = 20, init = 21, finish = 1 [END]</s>
Log message: [BEGIN] Finished task 4.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 2.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 6.0)
* <stage> is a placeholder for the stage number (e.g. 26.0)
* <tid> is a placeholder for the task ID (e.g. 1206)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 7.0)
* <stage> is a placeholder for the stage number (e.g. 26.0)
* <tid> is a placeholder for the task ID (e.g. 1207)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 8.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1208)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_6 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:43752+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_7 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:51044+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Partition rdd_42_8 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:58336+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Partition rdd_42_9 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:65628+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_5 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Block rdd_42_6 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_9 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 65, boot = 10, init = 45, finish = 10 [END]
Log template: [BEGIN] Times: total = 65, boot = 10, init = 45, finish = 10 [END]</s>
Log message: [BEGIN] Block rdd_42_8 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_7 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 45, boot = 19, init = 26, finish = 0 [END]
Log template: [BEGIN] Times: total = 45, boot = 19, init = 26, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 45, boot = 19, init = 26, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 5.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 10.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1210)</s>
Log message: [BEGIN] Partition rdd_42_10 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:72920+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 24, init = 17, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 24, init = 17, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 24, init = 17, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 6.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 9.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 8.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 11.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1211)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 12.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1212)</s>
Log message: [BEGIN] Finished task 7.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 13.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1213)</s>
Log message: [BEGIN] Partition rdd_42_11 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:80212+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 14.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1214)</s>
Log message: [BEGIN] Partition rdd_42_12 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:87504+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_13 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:94796+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_14 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:102088+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 48, boot = 8, init = 35, finish = 5 [END]
Log template: [BEGIN] Times: total = 48, boot = 8, init = 35, finish = 5 [END]
So the resulting log template would be:
[BEGIN] Times: total = 48, boot = 8, init = 35, finish = 5 [END]</s>
Log message: [BEGIN] Block rdd_42_10 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 48, boot = 10, init = 33, finish = 5 [END]
Log template: [BEGIN] Times: total = 48, boot = 10, init = 33, finish = 5 [END]</s>
Log message: [BEGIN] Block rdd_42_11 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the variables are:
* total: 51
* boot: 3
* init: 43
* finish: 5
So the resulting log template would be:
[BEGIN] Times: total = 51, boot = 3, init = 43, finish = 5 [END]</s>
Log message: [BEGIN] Block rdd_42_13 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_12 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_14 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 10.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_15 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:109380+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 21, init = 20, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 21, init = 20, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 21, init = 20, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 11.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 13.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 22, init = 18, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 22, init = 18, finish = 0 [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_16 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:116672+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Finished task 12.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 14.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Partition rdd_42_17 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:123964+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_18 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:131256+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Partition rdd_42_19 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:138548+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_15 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_16 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_17 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Block rdd_42_19 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_18 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 15.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (in this case, 20)
* <stage> is a variable representing the stage number (in this case, 26)
* <TID> is a variable representing the task ID (in this case, 1220)</s>
Log message: [BEGIN] Partition rdd_42_20 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:145840+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 16.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 17.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_21 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:153132+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Partition rdd_42_22 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:160424+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 20, init = 21, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 20, init = 21, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 20, init = 21, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 18.0 in stage 26.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.0 in <stage>.0 (TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_23 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:167716+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_24 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:175008+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Block rdd_42_20 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_22 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_21 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 50, boot = 4, init = 41, finish = 5 [END]
Log template: [BEGIN] Times: total = 50, boot = 4, init = 41, finish = 5 [END]
So the resulting log template would be:
[BEGIN] Times: total = 50, boot = 4, init = 41, finish = 5 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template has four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So the output of the log parser would be:
Log template: [BEGIN] Times: total = 40, boot = 13, init = 26, finish = 1 [END]</s>
Log message: [BEGIN] Block rdd_42_23 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 20.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <TID> is a variable representing the task ID (e.g. 1220)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2703)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_25 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:182300+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 26, init = 16, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 26, init = 16, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 42, boot = 26, init = 16, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 21)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1221)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2705)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_26 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:189592+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 20, init = 22, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 20, init = 22, finish = 0 [END]</s>
Log message: [BEGIN] Partition rdd_42_27 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:196884+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 24)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1224)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2703)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (in this case, 28)
* <stage> is a variable representing the stage number (in this case, 26)
* <tid> is a variable representing the task ID (in this case, 1228)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_28 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:204176+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_29 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:211468+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 48, boot = 5, init = 38, finish = 5 [END]
Log template: [BEGIN] Times: total = 48, boot = 5, init = 38, finish = 5 [END]</s>
Log message: [BEGIN] Block rdd_42_25 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_27 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_26 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 16, init = 25, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template has four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So the output of the log parser would be:
Log template: [BEGIN] Times: total = 54, boot = 5, init = 41, finish = 8 [END]
In this case, the values of the variables are:
* "total" = 54
* "boot" = 5
* "init" = 41
* "finish" = 8</s>
Log message: [BEGIN] Block rdd_42_28 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 25)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1225)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2705)</s>
Log message: [BEGIN] Block rdd_42_29 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (in this case, 30)
* <stage> is a variable representing the stage number (in this case, 26)
* <tid> is a variable representing the task ID (in this case, 1230)</s>
Log message: [BEGIN] Partition rdd_42_30 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:218760+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 27)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1227)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2701)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 32.0)
* <stage> is a variable representing the stage number (e.g. 26.0)
* <tid> is a variable representing the task ID (e.g. 1232)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Partition rdd_42_31 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:226052+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_32 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:233344+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_34 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:247928+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+* [END]</s>
Log message: [BEGIN] Partition rdd_42_33 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:240636+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Block rdd_42_30 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Block rdd_42_31 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_32 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <name> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 18, init = 23, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 18, init = 23, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 18, init = 23, finish = 0 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 30)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1230)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2703)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the variables are:
* total
* boot
* init
* finish

So, the extracted template would be:

Log message: [BEGIN] Times: total = 50, boot = 6, init = 39, finish = 5 [END]
Log template: [BEGIN] Times: total = 50, boot = 6, init = 39, finish = 5 [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.</s>
Log message: [BEGIN] Partition rdd_42_35 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:255220+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Block rdd_42_33 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 24, init = 18, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 24, init = 18, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 32)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1232)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2703)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 31)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1231)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2703)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 36)
* <stage> is a variable representing the stage number (e.g. 26)
* <tid> is a variable representing the task ID (e.g. 1236)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Partition rdd_42_36 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:262512+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Partition rdd_42_37 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:269804+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Partition rdd_42_38 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:277096+7292> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:* [END]</s>
Log message: [BEGIN] Partition rdd_42_39 not found, computing it [END]
Log template: [BEGIN] Partition <name>, not found, computing it [END]</s>
Log message: [BEGIN] Input split: <hdfs://10.10.34.11:9000/pjhe/logs/2kSOSP.log:284388+7303> [END]
Log template: [BEGIN] Input split: <hdfs://*:*/logs/*:*+*> [END]</s>
Log message: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Where:
* <num> is a variable representing the estimated size of the block in bytes.
So, the log template would be:
[BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Block rdd_42_37 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_36 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the variables are:
* total
* boot
* init
* finish

So, the extracted template would be:

Log message: [BEGIN] Times: total = 51, boot = 8, init = 38, finish = 5 [END]
Log template: [BEGIN] Times: total = 51, boot = 8, init = 38, finish = 5 [END]</s>
Log message: [BEGIN] Block rdd_42_38 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Block rdd_42_39 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 24, init = 16, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 24, init = 16, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 24, init = 16, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 36)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1236)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2705)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 13, init = 27, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 13, init = 27, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 13, init = 27, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 39)
* <stage> is a variable representing the stage number (e.g. 26)
* <TID> is a variable representing the task ID (e.g. 1239)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2703)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage <num>, TID <tid> [END]
Where:
* <num> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1241)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1242)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 3.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1243)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 4.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1244)</s>
Log message: [BEGIN] Block broadcast_38_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took 11 ms [END]
Where <num> is a placeholder for the dynamic value "38".</s>
Log message: [BEGIN] Block broadcast_38 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_42_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 2.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 5.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1245)</s>
Log message: [BEGIN] Finished task 3.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 6.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1246)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 7.0)
* <stage> is a placeholder for the stage number (e.g. 27.0)
* <tid> is a placeholder for the task ID (e.g. 1247)</s>
Log message: [BEGIN] Found block rdd_42_5 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 8.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1248)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 9.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1249)</s>
Log message: [BEGIN] Found block rdd_42_7 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_6 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_8 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_9 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template contains four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So the output of the log parser would be:
Log template: [BEGIN] Times: total = 40, boot = 26, init = 13, finish = 1 [END]</s>
Log message: [BEGIN] Finished task 5.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 10.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1250)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 8.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 6.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 7.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Found block rdd_42_10 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task 9.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 11.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1251)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 12.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1252)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 13.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1253)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 14.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1254)</s>
Log message: [BEGIN] Found block rdd_42_11 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_12 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_13 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_14 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 14, init = 25, finish = 1 [END]
Log template: [BEGIN] Times: total = 40, boot = 14, init = 25, finish = 1 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 14, init = 25, finish = 1 [END]</s>
Log message: [BEGIN] Finished task 10.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 15.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1255)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Finished task 11.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 12.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Found block rdd_42_15 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task 14.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 16.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1256)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Finished task 13.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 17.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1257)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 18.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1258)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_16 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_17 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_19 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_18 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 15.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (in this case, 20)
* <stage> is a variable representing the stage number (in this case, 27)
* <TID> is a variable representing the task ID (in this case, 1260)</s>
Log message: [BEGIN] Finished task 16.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Found block rdd_42_20 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Finished task <num>.0 in <stage>.0 (TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 17.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 18.0 in stage 27.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Found block rdd_42_21 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_22 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_24 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_23 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.0 in <stage>.0 (TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Finished task <num>.0 in <stage>.0 (TID <tid>). <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the task ID</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Found block rdd_42_25 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 22)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1262)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2171)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 24)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1264)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2592)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Found block rdd_42_26 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 28)
* <stage> is a variable representing the stage number (e.g. 27)
* <tid> is a variable representing the task ID (e.g. 1268)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_27 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_28 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_29 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 35, init = 5, finish = 1 [END]
Log template: [BEGIN] Times: total = 41, boot = 35, init = 5, finish = 1 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 35, init = 5, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 34, init = 6, finish = 1 [END]
Log template: [BEGIN] Times: total = 41, boot = 34, init = 6, finish = 1 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 34, init = 6, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 27.0)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1267)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2182)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 28)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1268)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2349)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 25)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1265)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2355)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 30)
* <stage> is a variable representing the stage number (e.g. 27)
* <tid> is a variable representing the task ID (e.g. 1270)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 31)
* <stage> is a variable representing the stage number (e.g. 27)
* <tid> is a variable representing the task ID (e.g. 1271)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 32.0)
* <stage> is a variable representing the stage number (e.g. 27.0)
* <tid> is a variable representing the task ID (e.g. 1272)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_31 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_32 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_33 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_30 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_34 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template has four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So the output of the log parser would be:
Log template: [BEGIN] Times: total = 40, boot = -27, init = 66, finish = 1 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 31)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1271)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2128)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template contains four placeholders:
* "<num>" for the value of "total"
* "<num>" for the value of "boot"
* "<num>" for the value of "init"
* "<num>" for the value of "finish"

So, the output of the log parser would be:
Log message: [BEGIN] Times: total = 41, boot = -24, init = 64, finish = 1 [END]
Log template: [BEGIN] Times: total = 41, boot = -24, init = 64, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four tokens:
* "Times"
* "total"
* "boot"
* "init"
* "finish"

And the log template contains four placeholders:
* "<num>"

So, the extracted log template would be:
[BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 32)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1272)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2801)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 33)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1273)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2592)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 35)
* <stage> is a variable representing the stage number (e.g. 27)
* <tid> is a variable representing the task ID (e.g. 1275)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 30)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1270)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2859)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 36)
* <stage> is a variable representing the stage number (e.g. 27)
* <tid> is a variable representing the task ID (e.g. 1276)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 37)
* <stage> is a variable representing the stage number (e.g. 27)
* <tid> is a variable representing the task ID (e.g. 1277)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_35 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_37 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_38 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_36 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 34)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1274)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2128)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_39 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 35)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1275)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2430)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 20, init = 19, finish = 1 [END]
Log template: [BEGIN] Times: total = 40, boot = 20, init = 19, finish = 1 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 36)
* <stage> is a variable representing the stage number (e.g. 27)
* <TID> is a variable representing the task ID (e.g. 1276)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2673)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage>, TID <TID> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task 1.0 in stage <num>, TID <tid> [END]
Where:
* <num> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1281)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (e.g. 2.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <TID> is a variable representing the task ID (e.g. 1282)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 28.0)
* <tid> is a placeholder for the task ID (e.g. 1283)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 4.0)
* <stage> is a placeholder for the stage number (e.g. 28.0)
* <tid> is a placeholder for the task ID (e.g. 1284)</s>
Log message: [BEGIN] Started reading broadcast variable <num>, [END]
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_39_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num>, took <time> ms [END]
Where:
* `<num>` is a placeholder for the dynamic value "39"
* `<time>` is a placeholder for the dynamic value "716 ms"</s>
Log message: [BEGIN] Block broadcast_39 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_42_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 4.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 2.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 3.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 5.0)
* <stage> is a placeholder for the stage number (e.g. 28.0)
* <tid> is a placeholder for the task ID (e.g. 1285)</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 6.0)
* <stage> is a placeholder for the stage number (e.g. 28.0)
* <tid> is a placeholder for the task ID (e.g. 1286)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Finished task 1.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 7.0)
* <stage> is a placeholder for the stage number (e.g. 28.0)
* <tid> is a placeholder for the task ID (e.g. 1287)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 8.0)
* <stage> is a placeholder for the stage number (e.g. 28.0)
* <tid> is a placeholder for the task ID (e.g. 1288)</s>
Log message: [BEGIN] Found block rdd_42_5 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_6 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_7 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_8 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_9 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 16, init = 24, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 16, init = 24, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 6.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 5.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 13, init = 29, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 13, init = 29, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 7.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 10.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1290)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 11.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1291)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Finished task 9.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 8.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 12.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1292)</s>
Log message: [BEGIN] Found block rdd_42_10 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 13.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1293)</s>
Log message: [BEGIN] Found block rdd_42_11 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 14.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1294)</s>
Log message: [BEGIN] Found block rdd_42_12 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_13 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_14 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 21, init = 19, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 21, init = 19, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task 10.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 12.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Finished task 11.0 in stage 28.0 (TID <num>, 2087 bytes result sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, <num> bytes result sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the variables are:
* total
* boot
* init
* finish

So, the output would be:

Log message: [BEGIN] Times: total = 41, boot = 12, init = 28, finish = 1 [END]
Log template: [BEGIN] Times: total = 41, boot = 12, init = 28, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_15 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task 14.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 13.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Found block rdd_42_17 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Found block rdd_42_16 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 18.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1298)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_18 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_19 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 19, init = 21, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 19, init = 21, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 20, init = 20, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 20, init = 20, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total <num>, boot <num>, init <num>, finish <num> [END]</s>
Log message: [BEGIN] Finished task 15.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 16.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 17.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (in this case, 20)
* <stage> is a variable representing the stage number (in this case, 28)
* <TID> is a variable representing the task ID (in this case, 1300)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_20 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task 18.0 in stage 28.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 19.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <TID> is a variable representing the task ID (e.g. 1299)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Found block rdd_42_21 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_22 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_24 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_23 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 20.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <TID> is a variable representing the task ID (e.g. 1300)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 21.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <TID> is a variable representing the task ID (e.g. 1301)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 14, init = 28, finish = 0 [END]
Log template: [BEGIN] Times: total = 42, boot = 14, init = 28, finish = 0 [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 22.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <TID> is a variable representing the task ID (e.g. 1302)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Found block rdd_42_25 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 24)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1304)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Found block rdd_42_26 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 23)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1303)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_27 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_28 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_29 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 25)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1305)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 27, init = 13, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 27, init = 13, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 27, init = 13, finish = 0 [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (in this case, 30)
* <stage> is a variable representing the stage number (in this case, 28)
* <TID> is a variable representing the task ID (in this case, 1310)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 26, init = 14, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 26, init = 14, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 26, init = 14, finish = 0 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 27.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <TID> is a variable representing the task ID (e.g. 1307)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Found block rdd_42_30 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 28.0)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1308)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 32.0)
* <stage> is a variable representing the stage number (e.g. 28.0)
* <tid> is a variable representing the task ID (e.g. 1312)</s>
Log message: [BEGIN] Found block rdd_42_31 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 29)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1309)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Found block rdd_42_32 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_33 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_34 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 18, init = 22, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 18, init = 22, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 30)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1310)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 31)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1311)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]
Log template: [BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 15, init = 25, finish = 0 [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 36)
* <stage> is a variable representing the stage number (e.g. 28)
* <tid> is a variable representing the task ID (e.g. 1316)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 32)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1312)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Found block rdd_42_35 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is a variable representing the task number (e.g. 33)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1313)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 14, init = 25, finish = 1 [END]
Log template: [BEGIN] Times: total = 40, boot = 14, init = 25, finish = 1 [END]
So the resulting log template would be:
[BEGIN] Times: total = 40, boot = 14, init = 25, finish = 1 [END]</s>
Log message: [BEGIN] Found block rdd_42_36 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 34)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1314)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_37 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_38 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_39 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 23, init = 18, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 23, init = 18, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 23, init = 18, finish = 0 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 19, init = 22, finish = 0 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 35)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1315)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 36)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1316)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 37)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1317)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x1438f9e0)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 39)
* <stage> is a variable representing the stage number (e.g. 28)
* <TID> is a variable representing the task ID (e.g. 1319)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2087)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num> in stage <stage> (TID <tid>) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 1.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1321)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 2.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1322)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 3.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1323)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 4.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1324)</s>
Log template: [BEGIN] Started reading broadcast variable <num>, [END]</s>
Log message: [BEGIN] Block broadcast_40_piece0 stored as bytes in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as bytes in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Reading broadcast variable <num> took 10 ms [END]
Where <num> is a placeholder for the dynamic value "40".</s>
Log message: [BEGIN] Block broadcast_40 stored as values in memory (estimated size <num>, free <num> KB) [END]
Log template: [BEGIN] Block <num> stored as values in memory (estimated size <num>, free <num> KB) [END]</s>
Log message: [BEGIN] Found block rdd_42_0 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_4 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_3 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_2 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_1 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = -<num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.
Log template: [BEGIN] Times: total = <num>, boot = -<num>, init = <num>, finish = <num> [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.</s>
Log message: [BEGIN] Finished task 3.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 4.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task <num> in stage <stage>, TID <TID>. <num> bytes result sent to driver [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID</s>
Log message: [BEGIN] Finished task 2.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 1.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 5.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1325)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 6.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1326)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 7.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1327)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a placeholder for the task number (e.g. 8.0)
* <stage> is a placeholder for the stage number (e.g. 29.0)
* <tid> is a placeholder for the task ID (e.g. 1328)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_5 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_7 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_8 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_6 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_9 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 16, init = 24, finish = 1 [END]
Log template: [BEGIN] Times: total = 41, boot = 16, init = 24, finish = 1 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 16, init = 24, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 7.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 5.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 8.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 9.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 6.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.<num> in stage <num>.<num> (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 10.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1330)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 11.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1331)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 12.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1332)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 13.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1333)</s>
Log message: [BEGIN] Found block rdd_42_10 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 14.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1334)</s>
Log message: [BEGIN] Found block rdd_42_11 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_12 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_14 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_13 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 11.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 10.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Finished task 14.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 12.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Finished task 13.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at 0x0, mask 0x0 [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 17.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1337)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 18.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the task ID (e.g. 1338)</s>
Log message: [BEGIN] Found block rdd_42_16 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_15 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_17 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_18 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_19 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 20, init = 19, finish = 1 [END]
Log template: [BEGIN] Times: total = 40, boot = 20, init = 19, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 40, boot = 20, init = 19, finish = 1 [END]
Log template: [BEGIN] Times: total = 40, boot = 20, init = 19, finish = 1 [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 41, boot = 27, init = 14, finish = 0 [END]
Log template: [BEGIN] Times: total = 41, boot = 27, init = 14, finish = 0 [END]
So the resulting log template would be:
[BEGIN] Times: total = 41, boot = 27, init = 14, finish = 0 [END]</s>
Log message: [BEGIN] Finished task 15.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 16.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Finished task 18.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task 17.0 in stage 29.0 (TID <num>, bytes <num> sent to driver [END]
Log template: [BEGIN] Finished task <num>.0 in stage <num>.0 (TID <num>, bytes <num> sent to driver [END]</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage>.<TID> [END]
Where:
* <num> is a variable representing the task number (in this case, 20)
* <stage> is a variable representing the stage number (in this case, 29)
* <TID> is a variable representing the task ID (in this case, 1340)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 19.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <TID> is a variable representing the task ID (e.g. 1339)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2128)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Found block rdd_42_21 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_20 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_22 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_23 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_24 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Log template: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
In this case, the log message contains four variables: "total", "boot", "init", and "finish". You can replace the placeholders with the actual values from the log message, like this:
Log message: [BEGIN] Times: total = 42, boot = 20, init = 21, finish = 1 [END]
Log template: [BEGIN] Times: total = 42, boot = 20, init = 21, finish = 1 [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 21.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <TID> is a variable representing the task ID (e.g. 1341)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2128)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver). [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 20.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <TID> is a variable representing the task ID (e.g. 1340)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 2128)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 24)
* <stage> is a variable representing the stage number (e.g. 29)
* <TID> is a variable representing the task ID (e.g. 1344)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2128)</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Found block rdd_42_25 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number.
* <stage> is a variable representing the stage number.
* <tid> is a variable representing the task ID.</s>
Log message: [BEGIN] Found block rdd_42_26 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_28 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_27 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Found block rdd_42_29 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values in the log message.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number (e.g. 25)
* <stage> is a variable representing the stage number (e.g. 29)
* <TID> is a variable representing the task ID (e.g. 1345)
* <hex> is a variable representing the hexadecimal address of the result sent to the driver (e.g. 0x2128)</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is the task number
* <stage> is the stage number
* <TID> is the task ID
* <hex> is the hexadecimal representation of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 30)
* <stage> is a variable representing the stage number (e.g. 29)
* <tid> is a variable representing the task ID (e.g. 1350)</s>
Log message: [BEGIN] Times: total = <num>, boot = <num>, init = <num>, finish = <num> [END]
Where <num> are placeholders for the actual values of the variables.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number (e.g. 32.0)
* <stage> is a variable representing the stage number (e.g. 29.0)
* <tid> is a variable representing the thread ID (e.g. 1352)</s>
Log message: [BEGIN] Got assigned task <num>, [END]
Log template: [BEGIN] Got assigned task <num>, [END]</s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_30 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
Log message: [BEGIN] Finished task <num>.<stage>.<TID> (<num> bytes result sent to driver) [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <TID> is a variable representing the task ID
* <hex> is a variable representing the hexadecimal address of the result sent to the driver</s>
Log message: [BEGIN] Got assigned task <num>, at <END></s>
Log message: [BEGIN] Running task <num>.<stage> in TID <tid> [END]
Where:
* <num> is a variable representing the task number
* <stage> is a variable representing the stage number
* <tid> is a variable representing the thread ID.</s>
Log message: [BEGIN] Found block rdd_42_32 locally [END]
Log template: [BEGIN] Found block <name>, locally [END]</s>
